<?php
/**
 * @file
 * Custom functionality for Bazar Theme
 */

/*****CREATING BLOCK********/
function bazar_theme_block_info(){
    $blocks = array();

    $blocks['add_to_cart'] = array(
        'info' => t('Bazar Theme: Add to Cart Block'),//admin ui block name
    );
    $blocks['select_product'] = array(
        'info' => t('Bazar Theme: Select Product'),//admin ui block name
        'cache' => DRUPAL_NO_CACHE,
    );
    $blocks['contact_info'] = array(
        'info' => t('Bazar Theme: Contact Info Block'),//admin ui block name
        'properties' => array('administrative' => TRUE),
        'weight' => '10',
    );
    $blocks['contact_info2'] = array(
        'info' => t('Bazar Theme: Contact Info Block2'),//admin ui block name
        'properties' => array('administrative' => TRUE),
    );
    $blocks['contact_form'] = array(
        'info' => t('Bazar Theme: Contact Form Block'),//admin ui block name
        'properties' => array('administrative' => TRUE),
    );
    $blocks['contact_form_horizon'] = array(
        'info' => t('Bazar Theme: Contact Form Block Horizontal'),//admin ui block name
        'properties' => array('administrative' => TRUE),
    );
    $blocks['inquiry_form_horizon'] = array(
        'info' => t('Bazar Theme: Inquiry Form Horizontal'),//admin ui block name
        'properties' => array('administrative' => TRUE),
    );
    return $blocks;
}

/**
 * Implements hook_block_view
 * the rendered block content and title
 */
function bazar_theme_block_view($delta = ''){
    $block = array();

    switch($delta){
        case 'add_to_cart':{
            $block['subject'] = t('Add To Cart');
            $block['default_product_price'] = bazar_default_product(drupal_set_page_content());
            $block['content'] = add_to_cart_block_contents($delta);
            break;
        }
        case 'select_product':{
            $block['subject'] = t('');
            $block['content'] = select_product_contents($delta);
            break;
        }
        case 'contact_info':{
            $block['subject'] = t('');
            $block['content'] = build_contact($delta);
            break;
        }
        case 'contact_info2':{
            $block['subject'] = t('');
            $block['content'] = build_contact($delta);
            break;
        }
        case 'contact_form':{
            $block['subject'] = t('');
            $block['content'] = array(
                '#markup' => build_contact($delta),
                '#attached' => array(
                    'js' => array(
                        drupal_get_path('module', 'bazar_theme').'/js/build/contact.min.js' => array(
                            'type' => 'file',
                            'weight' => 20,
                        ),
                    ),
                ),
            );
            break;
        }
        case 'inquiry_form_horizon':
        case 'contact_form_horizon':{
            $block['subject'] = t('');
            $block['content'] = array(
                '#markup' => build_contact($delta),
                '#attached' => array(
                    'js' => array(
                       drupal_get_path('module', 'bazar_theme').'/js/build/contact-horizontal.min.js' => array(
                            'type' => 'file',
                            'weight' => 20,
                        ),
                    ),
                ),
            );
            break;
        }
    }

    return $block;
}

function build_contact($delta){
    $output = '';
    switch($delta){
        case 'contact_info2':
        case 'contact_info':
            $output .= theme_render_template(drupal_get_path('module', 'bazar_theme').'/inc/block--bazar-theme--contact-info.tpl.php', array());
//            $output .= "<div>contact info block from module</div>";
            break;
        case 'contact_form':
            $output .= theme_render_template(drupal_get_path('module', 'bazar_theme').'/inc/block--bazar-theme--contact-form.tpl.php', array());
            break;
        case 'inquiry_form_horizon':
        case 'contact_form_horizon':
            $output .= theme_render_template(drupal_get_path('module', 'bazar_theme').'/inc/block--bazar-theme--contact-form-horizontal.tpl.php', array());
            break;

    }
    return $output;
}

function add_to_cart_form($form, &$form_submit){
    $form['color'] = array(
        '#title' => t('Favorite color'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t('What is your favorite color? Blue? No, wait-'),
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
    );
    return $form;
}

function add_to_cart_block_form($form, &$form_state, $line_item, $show_quantity = FALSE, $context = array()){

    $form = commerce_cart_add_to_cart_form($form, $form_state, $line_item, $show_quantity = FALSE, $context = array());

    // replace the default commerce form id with our custom block ID. This is necessary for AJAX to function while both forms are on the page
    $form['#attributes']['class'][1] = drupal_html_class('bazar_add_to_cart_block_form');
    unset($form['attributes']);
    return $form;
}

function bazar_default_product($content){
    if(isset($content['nodes'])){
        $content_type_id = max(array_keys($content['nodes']));
        $default_product_price = $content['nodes'][$content_type_id]['product:commerce_price'][0]['#markup'];
        return $default_product_price;
    }

}

function select_product_contents($delta){

    $node_content = drupal_set_page_content();
    if(isset($node_content['nodes'])){
        $content_type_id = max(array_keys($node_content['nodes']));

        //retreve render array of add-to-cart form
        $select_product_form = $node_content['nodes'][$content_type_id]['field_product'][0];

        //reset class for the block to our custom so that Ajax calls doesn't intereffect each other
        $select_product_form['#attributes']['class'][1] = drupal_html_class('select_product_form');
        return drupal_render($select_product_form);
    }

}

/**
 * Add To Cart Block contents
 *
 *@param string $delta
 *   the block ID
 *
 * @return string
 *   HTML output.
 */

function add_to_cart_block_contents($delta){
    $output = '';
    switch($delta){
        case 'add_to_cart':{
              $output .= generate_add_to_cart_block();
            break;
        }
    }
    return $output;
}

function generate_add_to_cart_block(){
    $node_content = drupal_set_page_content();
    if(isset($node_content['nodes'])){
        $content_type_id = max(array_keys($node_content['nodes']));

        //retreve render array of add-to-cart form
        $add_to_cart_form = $node_content['nodes'][$content_type_id]['field_product'][0];

        //remove attributes
        unset($add_to_cart_form['attributes']);
        //reset class for the block to our custom so that Ajax calls doesn't interaffect each other
        $add_to_cart_form['#attributes']['class'][1] = drupal_html_class('bazar_add_to_cart_block_form');
        return drupal_render($add_to_cart_form);
    }
}

function bazar_theme_commerce_cart_attributes_refresh_alter(&$commands, $form, $form_state){
    unset($form_state['complete form']['attributes']);
    $default_product = $form_state['default_product'];
    $form_state['complete form']['#attributes']['class'][1] = drupal_html_class('bazar_add_to_cart_block_form');
    $add_to_cart_block_form = drupal_render($form_state['complete form']);
    $commands[] = ajax_command_replace('.bazar-add-to-cart-block-form', $add_to_cart_block_form);
   $prod_price = substr($default_product->commerce_price[LANGUAGE_NONE][0]['amount'],0,-2).'.'.substr($form_state['default_product']->commerce_price[LANGUAGE_NONE][0]['amount'],-2);

    $prod_default = array();
    if($default_product->field_mobile_support[LANGUAGE_NONE][0]['taxonomy_term']->name == 'Responsive'){
        $prod_default['mobile_support'] = 'yes';
    }else{
        $prod_default['mobile_support'] = 'no';
    }

    $prod_default['design_framework'] = $default_product->field_design_framework[LANGUAGE_NONE][0]['taxonomy_term']->name;
    $prod_default['description'] = $default_product->field_description[LANGUAGE_NONE][0]['value'];

    $prod_default['category']=array();
    $output_category ='';
    foreach($default_product->field_category[LANGUAGE_NONE] as $key=>$val){
        $output_category .= '<li><a href="#" rel="tag">'.$val['taxonomy_term']->name.'</a></li>';
    }

    $img_magnified_src = url('sites/default/files/'.file_uri_target($default_product->field_featured_image_magnified[LANGUAGE_NONE][0]['uri']), array('absolute'=>true));
    $img_src = url('sites/default/files/'.file_uri_target($default_product->field_featured_image[LANGUAGE_NONE][0]['uri']), array('absolute'=>true));
    $image_output = '';
    $image_output .= '<a itemprop="image" href="'.$img_magnified_src.'" class="yith_magnifier_zoom" rel="thumbnails">';
    $image_output .= '<img src="'.$img_src.'" alt="" class="yit-image attachment-shop_single" width="462" height="392" />';
    $image_output .= '</a>';

    if($default_product->field_is_on_sale[LANGUAGE_NONE][0]['taxonomy_term']->name == "True"){
        $image_output .= '<img src="'.base_path().path_to_theme() .'/img/sale.png" alt="On sale!" class="onsale yit-image" width="71" height="68" />';
    }
    if($default_product->field_is_new_product[LANGUAGE_NONE][0]['taxonomy_term']->name == "True"){
        $image_output .= '<img src="'.base_path().path_to_theme() .'/img/new-product.png" alt="New Product!" class="new-prod yit-image" width="71" height="68" />';
    }
    $image_output .= '<div class="thumbnails">';
    $image_output .= '<div id="slider-prev"></div>';
    $image_output .= '<div id="slider-next"></div>';
    $image_output .= '</div>';

    $hide_demo = '';
    if($default_product->field_hide_demo_header[LANGUAGE_NONE][0]['taxonomy_term']->name == 'yes'){
        $hide_demo = 'hide-demo-header';
    }
    $demo_output = '';
    $demo_output .= '<div class="modal-body-demo modal-body">';
    $demo_output .= '<iframe src="'.$default_product->field_demo_url[LANGUAGE_NONE][0]['value'].'" class="'.$hide_demo.'" height="2000" width="1400" scrolling="no" frameborder="0" seamless></iframe>';
    $demo_output .= '</div>';

    $commands[] = ajax_command_replace('.product-final-price', '<span class="amount product-final-price">$'.$prod_price.'</span>');
    $commands[] = ajax_command_replace('.mobile-support', '<span class="mobile-support"><a href="#" rel="tag">'.$prod_default['mobile_support'].'</a></span>');
    $commands[] = ajax_command_replace('.prod-design-framework', '<span class="prod-design-framework"><a href="#" rel="tag">'.$prod_default['design_framework'].'</a></span>');
    $commands[] = ajax_command_replace('.prod-cat-refresh', '<ul class="unstyled prod-cat-refresh">'.$output_category.'</ul>');
    $commands[] = ajax_command_replace('.description-refresh', '<span class="description-refresh">'.$prod_default['description'].'</span>');

    $commands[] = ajax_command_replace('.images', '<div class="images">'.$image_output.'</div>');
    $commands[] = ajax_command_replace('.modal-body-demo', $demo_output);

}
